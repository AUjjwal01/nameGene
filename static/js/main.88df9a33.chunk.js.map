{"version":3,"sources":["component/SearchBox.js","component/NameCard.js","component/Results.js","component/svgimg.svg","component/Navbar.js","component/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","onHandleChange","className","onChange","event","target","value","type","placeholder","NameCard","suggestion","Results","suggestedNames","suggestions","map","e","Navbar","headerText","headerExpanded","src","svgimg","alt","style","color","name","require","App","onInputChange","inputText","setState","state","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAQeA,EAPC,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,eACd,OACI,qBAAKC,UAAU,SAAf,SACI,uBAAOC,SAAU,SAACC,GAAD,OAASH,EAAeG,EAAMC,OAAOC,QAAQC,KAAK,OAAOC,YAAY,oBAAoBN,UAAU,aCEjHO,EAJA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,WACb,OAAO,8BAAK,oBAAGR,UAAU,UAAb,cAAyBQ,EAAzB,UCWDC,EAXC,SAAC,GAAmB,IAC1BC,EADyB,EAAjBC,YACmBC,KAAI,SAAAC,GACjC,OAAO,cAAC,EAAD,CAAkBL,WAAYK,GAAfA,MAE9B,OACI,qBAAKb,UAAU,YAAf,SACKU,KCTM,MAA0B,mCCc1BI,EAVF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,WAAWC,EAAkB,EAAlBA,eACtB,OACI,sBAAKhB,UAAU,SAAf,UACI,qBAAKiB,IAAKC,EAAQlB,UAAS,kBAAagB,EAAe,UAAD,cAA2BG,IAAI,KACrF,oBAAIC,MAAO,CAACC,MAAM,WAAlB,SAA+BN,QCHrCO,EAAMC,EAAQ,IA+BLC,E,kDA5Bb,aAAc,IAAD,8BACX,gBAQJC,cAAe,SAACC,GACd,EAAKC,SAAS,CAACX,gBAAgBU,EAAUf,YAAYe,EAAUJ,EAAKI,GAAW,MAR7E,EAAKE,MAAM,CACTb,WAAW,YACXC,gBAAe,EACfL,YAAY,IALH,E,0CAeb,WAEE,OACE,sBAAKX,UAAU,OAAf,UACE,cAAC,EAAD,CAAQe,WAAYc,KAAKD,MAAMb,WAAYC,eAAgBa,KAAKD,MAAMZ,iBACxE,cAAC,EAAD,CAAYjB,eAAgB8B,KAAKJ,gBAEjC,cAAC,EAAD,CAASd,YAAakB,KAAKD,MAAMjB,qB,GAvBrBmB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.88df9a33.chunk.js","sourcesContent":["import React from 'react';\r\nconst SearchBox=({onHandleChange})=>{\r\n    return(\r\n        <div className=\"search\">\r\n            <input onChange={(event)=>onHandleChange(event.target.value) }type=\"text\" placeholder=\"Type to get ideas\" className=\"input\"/>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox","import React from 'react'\r\nimport '../App.css'\r\nconst NameCard=({suggestion})   =>{\r\n    return <div><p className=\"results\"> {suggestion} </p>\r\n    </div> \r\n}\r\nexport default NameCard","import React from 'react'\r\nimport NameCard from './NameCard'\r\n\r\nconst Results=  ({suggestions})  =>{\r\n    const suggestedNames=suggestions.map(e=>{\r\n        return <NameCard key={e} suggestion={e} />\r\n    })\r\nreturn(\r\n    <div className=\"container\">\r\n        {suggestedNames}\r\n    </div>\r\n)\r\n\r\n}\r\nexport default Results","export default __webpack_public_path__ + \"static/media/svgimg.03c3de26.svg\";","import React from 'react';\r\nimport svgimg from './svgimg.svg'\r\nimport '../App.css'\r\n\r\nconst Navbar=({headerText,headerExpanded})=>{\r\n    return(\r\n        <div className=\"header\">\r\n            <img src={svgimg} className={`img-exp ${headerExpanded?`img-exp`:`img-shrink`}`} alt=\"\" />\r\n            <h1 style={{color:'#363100'}}>{headerText}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar","import React from 'react';\nimport '../App.css';\nimport SearchBox from './SearchBox';\nimport Results from './Results';\nimport Navbar from './Navbar';\nconst name= require(\"@rstacruz/startup-name-generator\");\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      headerText:\"NameGeNe!\",\n      headerExpanded:true,\n      suggestions:[]\n    };\n  }\n  \nonInputChange= (inputText) =>{\n  this.setState({headerExpanded:!inputText,suggestions:inputText?name(inputText):[]})\n\n\n}\n\n  render(){\n  \n    return(\n      <div className=\"flex\">\n        <Navbar headerText={this.state.headerText} headerExpanded={this.state.headerExpanded}/>\n      <SearchBox  onHandleChange={this.onInputChange}    />\n     \n      <Results suggestions={this.state.suggestions} />\n      </div>\n      \n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './component/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}